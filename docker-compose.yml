version: "3.8"

services:
  # Servicio de la Base de Datos MySQL
  mysql-db:
    container_name: servidor_dbs
    build: ../phpcuadrantes/image_mysql
    ports:
      - 3005:3006
    volumes:
      - ../phpcuadrantes/image_mysql/mysql_local:/var/lib/mysql_local
      - persistentdb:/var/lib/mysql
    environment:
      TZ: Europe/Madrid"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_USER: "apacheweb"
      MYSQL_PASSWORD: "12321a"
      MYSQL_DATABASE: "cuadrantes"
  # Servicio del Backend (API NestJS)
  backend-api:
    container_name: backend-api-container
    build:
      context: ./cuadrantes2-0-api # Ruta al Dockerfile del backend
      dockerfile: Dockerfile
    ports:
      - "3101:3101"
    volumes:
      - ./cuadrantes2-0-api:/usr/src/app # Sincroniza el código para desarrollo
      - /usr/src/app/node_modules # Evita que el node_modules local sobreescriba el del contenedor
    command: npm run start:dev # Ejecuta en modo desarrollo con hot-reload
    depends_on:
      - mysql-db # No arrancar hasta que la BD esté lista
    env_file:
      - ./cuadrantes2-0-api/.env # Carga las variables de entorno desde el fichero .env

  # Servicio del Frontend (App Next.js)
  frontend-app:
    container_name: frontend-app-container
    build:
      context: ./cuadrantes2-0-gestion # Ruta al Dockerfile del frontend
      dockerfile: Dockerfile
    ports:
      - "3102:3102"
    volumes:
      - ./cuadrantes2-0-gestion:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      - backend-api # Opcional, pero bueno para asegurar el orden de arranque

volumes:
  persistentdb:
    driver: "local"
